function [Y,Xf,Af] = tp149a871e_be81_48a1_ab2c_35b70c02abfd(X,~,~)
%TP149A871E_BE81_48A1_AB2C_35B70C02ABFD neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-Sep-2017 03:39:01.
% 
% [Y] = tp149a871e_be81_48a1_ab2c_35b70c02abfd(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1710.79601884287;-2767.31086728677;-925.675633657013;-538.97327665492;-1115.63541033651;-861.95307614226;-996.6647259884;-421.625702789077;-721.55388528656;-557.274532479559;-502.132109545499;-541.944235264833;-462.745727182147;-167.207345824914;-344.528961662846;-294.401776402708;-391.010406370081;-285.680184537938;-174.294824484559;-303.609020442448];
  x1_step1_gain = [0.000202107905561193;0.000554219398814734;0.000742185534904079;0.0010185341647551;0.00103332655312913;0.0014768159714401;0.00118221307527392;0.00265958726683857;0.0012523589192447;0.00165285753178002;0.00232860128237176;0.00188013184297678;0.00198822427969297;0.00479968082327804;0.0025204716922512;0.00363117206158382;0.00272984263620504;0.00383651951608927;0.00502254586493067;0.00330771328744469];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-1.558204213888435552;2.1422027752563796987;0.65372306803571822442;-2.0995299436758041445;3.1494493544172907917];
  IW1_1 = [2.8754403580257581474 1.1514751455538965175 -1.9223911341314525725 0.26904278521323021778 2.2927385885573525748 -1.9252538741969753566 0.59995183867443568904 2.8211323559226504365 1.2898582130022777648 0.30116224621483628221 3.9810505525470456512 -2.9802048076725564663 4.7824801293043606165 -2.0142515098029765142 -1.7339428554609845889 0.2325517644782708615 1.8093759406000236023 1.1485556366160700748 -0.43136118977990256518 -1.7711075622913203809;0.046175866616743277415 -2.6211164306171736982 1.8565575456767626772 -4.1259404261732450792 0.46796415444123573568 -3.9940017734276689332 -1.9409768590548854839 1.8199801369546702023 -0.2956880711187281352 -0.28435975470491003936 -0.51045304946266611967 -0.78581558434522114087 -1.1203708293372480753 -2.408390090804549466 5.8060704692937017413 -1.8679017610214103673 -5.3048705546300665148 -1.0793862141054466619 2.5657084141681139045 -3.6675314965997749539;2.8128810287671082158 -7.5341255033425191812 -3.43837911413496089 -0.65393338143168278087 -4.4774391050391564306 1.8067305163444804528 -1.1938338554837899519 3.0674782523658428168 3.5962568593600137135 -0.534110854337287555 0.13948669921513620618 0.029316162033222646632 -1.7721161124732109915 -4.0461351287066733562 6.8280012028143479696 2.4859384904699761698 -4.1184581738327636913 -0.63442121144158913904 -0.35085272596273064938 -0.72994719520196105211;-2.520941113498105679 0.90564360691560896743 1.3179239257248289707 -1.5811305429077491258 3.8341073336427271556 -2.7920293305119439076 4.0143681043253440777 4.171104737882473934 -3.0637929417573550595 -1.744929003460868655 6.6481306099334442905 -1.6110264934573996776 1.8447709019565230459 2.3275149636795564589 -1.0529911828272155994 -2.3216132476806392582 -4.8257577704771845717 -0.69008156704260470438 1.2407641259705928238 2.9756653961320100876;3.277260040413097375 -1.0710436590010674607 3.1845367226359098112 -2.5032311499273820488 -3.485454407819713829 -4.4665934566149516627 3.9372673521386110096 -0.5443606693343278069 3.180987237238669163 -3.8515859360497297637 0.70078915170565081461 2.2463990709130650103 0.34470983462970539168 -3.7591572064421718835 4.3759819168277216406 0.28181143901910804539 1.4441436560915366094 -0.15325898197338386209 -3.2347216772432854093 5.119948590213708961];
  
  % Layer 2
  b2 = 4.5270875595156345739;
  LW2_1 = [-13.081351268360636553 -11.208310574664100301 15.318197020310295287 10.308460610738112706 -7.7885182684944451736];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

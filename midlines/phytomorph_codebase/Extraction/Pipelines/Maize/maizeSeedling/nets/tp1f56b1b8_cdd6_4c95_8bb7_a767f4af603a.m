function [Y,Xf,Af] = tp1f56b1b8_cdd6_4c95_8bb7_a767f4af603a(X,~,~)
%TP1F56B1B8_CDD6_4C95_8BB7_A767F4AF603A neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 31-Aug-2017 12:29:43.
% 
% [Y] = tp1f56b1b8_cdd6_4c95_8bb7_a767f4af603a(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-4904.70968161112;-869.862833785137;-827.302598638522;-443.772627598188;-714.41108654319;-480.217047911235;-777.126138223054;-423.084215360188;-653.051662017862;-453.619680236015;-196.783309561042;-287.565755345312;-297.64667876413;-218.810003102102;-353.098081769898;-319.796556490195;-310.672174072255;-269.527046631591;-158.324230994348;-197.343487209756];
  x1_step1_gain = [0.000193471702868436;0.000632867989749186;0.00106564221979597;0.000997750888431905;0.001370891058533;0.00172046072827864;0.00151665899401731;0.00273255835343162;0.00192816699683992;0.00237191709373285;0.00442707648453828;0.00359646519879085;0.00297276865939876;0.00492600826026289;0.00330719979527524;0.00368145234991353;0.0033482505197035;0.00421974226135535;0.00627715281361309;0.00572404098867593];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [7.3352694111101772734;-39.805364898007780994;-38.137681894337575272;58.878542004343835004;-9.8553939255383422591];
  IW1_1 = [-1.0206515007437273468 -3.8507708205206272467 -0.66480830311020033818 -2.3764564107545478322 -2.0518400407077277414 -0.74381217126936371997 0.39530051622183831617 2.0551781227035572641 0.66096127872729826258 0.43162675540340539326 -1.1121220353524980951 0.94204915615635054227 -1.095973248489103602 1.0786084011055436793 0.86587280885230633043 1.0039574717146024785 1.2578780931401836174 0.48768783289824940708 0.29787429152017708134 -0.2294978491744649185;3.8196907042531678123 31.859662291935460843 5.363504155939097906 22.403777953137794299 3.7514121578746109087 6.5174354274904970907 -6.8085818103557311787 -8.4878402696607651023 -10.977553174972088712 -3.6420762146874046117 7.0148207088041747426 -0.74106391084797318403 5.9429015561099092224 -2.9467628433419266187 -6.5087570443999771541 -7.7498032059893597889 -1.5550124244808514185 -5.4810220516758541009 0.17755434506359371594 -4.368855959834327507;3.239609177769334547 30.17557348629405567 4.6877812617523888505 20.961438825905748473 3.407990512523153992 6.7769653101422075991 -7.0351659799376333737 -7.2126196006319336362 -10.050509565757307584 -2.76185378460730524 5.724780159540136637 -0.82132851322277833361 5.3544014504101822283 -2.3642539129444379853 -6.1277661312787961023 -7.4286269993722200411 -2.0763565398993062416 -5.1194388928348164569 0.19632388781868087557 -5.1886069649141806082;-6.1516675094340413921 -47.251006425535322819 -7.5079042983776984599 -33.265612991993911862 -3.6016777996160014297 -10.707500494026874094 9.6849572131725736313 10.059621603289938818 16.397940027362736259 5.6966358663954812513 -10.152354964110635649 0.57066176238320787117 -8.3568165887355814192 4.6306829422715987121 10.065173654042004259 11.249415788628668977 2.6871506144456227538 7.9046029608321290993 -0.56382332996401485214 6.9449293078625187192;-1.2873551404518364105 -17.159653930333664817 -1.1913769531301225957 -4.9029171242722853208 -3.0702974219826746349 -3.6868392777025631446 -11.413396652928547326 6.5337755295454185145 -1.3662450985569887241 -2.7516549178934455178 -1.7641585834709592184 -4.815633432026288574 -5.0365864452446817978 -3.8477211239186424052 6.5525245508283562756 1.5883294252867774521 -1.3772743521240393694 0.29631052430563681321 -3.8208910709508203674 -3.368012003288387568];
  
  % Layer 2
  b2 = 50.146923728565539591;
  LW2_1 = [-45.78329293840408809 33.050294749732280764 -4.7755459582044492706 -21.399043807350725643 46.936845710218840111];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

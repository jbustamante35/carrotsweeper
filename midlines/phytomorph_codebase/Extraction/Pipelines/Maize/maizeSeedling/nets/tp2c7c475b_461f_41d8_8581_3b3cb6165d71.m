function [Y,Xf,Af] = tp2c7c475b_461f_41d8_8581_3b3cb6165d71(X,~,~)
%TP2C7C475B_461F_41D8_8581_3B3CB6165D71 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 04-Sep-2017 00:14:54.
% 
% [Y] = tp2c7c475b_461f_41d8_8581_3b3cb6165d71(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-8184.90793418461;-2767.31086728677;-1769.06834334395;-1424.63292253515;-1115.63541033651;-861.953076142265;-996.664725988395;-421.62570278909;-721.553885286554;-557.274532479564;-502.1321095455;-541.944235264818;-462.74572718216;-167.207345824933;-344.528961662817;-294.401776402708;-391.010406370104;-235.625647900168;-174.294824484573;-301.038307242065];
  x1_step1_gain = [0.000202107905561193;0.000554219398814734;0.000742185534904078;0.0010185341647551;0.00103332655312912;0.00147681597144009;0.00118221307527393;0.00265958726683851;0.00125235891924471;0.00165285753178001;0.00232860128237177;0.00188013184297681;0.0019882242796929;0.00479968082327788;0.00252047169225134;0.00363117206158385;0.0027298426362049;0.00383651951608936;0.00502254586493012;0.00330771328744492];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [4.9364945715330401654;-0.47438005918081765921;2.5403311133280572776;-4.7002368062623007816;2.6885948075181680395];
  IW1_1 = [-5.1224504628981248899 -2.2405508675141700969 -0.91740939469543125728 -3.853654818001473803 -0.422715810925412383 -3.559701614459773733 -2.0728430476693331386 3.7387228275316712889 2.2001865343854536405 0.81500691698826355225 3.5720661354740994575 -1.6671192519669537635 2.9682122157165800047 -3.2395803270636358562 -0.80132102802914317863 1.1921915105824969494 1.7437609716124513604 -1.8142958432272320302 -1.793241517936287055 0.40590032489271082872;-0.95017089741021476534 0.74588192445567824684 -1.7642064646482720214 1.9223552979139233443 -0.36042165213210325403 -2.612281568889766703 1.8444623112305906787 2.6993928982674124661 2.1589203913182690719 -1.1831427548892599066 2.8032957348550708865 -3.5659026317922126736 3.1442311662559476737 0.66274044779229779323 1.5038300409592344486 -0.61481656229665404556 -0.85482295701311739045 -2.0117792280933475269 2.0633128075895692533 6.3113740886392575291;-1.6141538736129941167 -5.6819741480991350357 2.8775737043255613656 -3.6145245191833503817 -1.8625535175688492373 0.41352314518453642256 -1.7789250969066856545 3.1846474680646088551 2.2002301114192883702 1.2645515944061813673 3.009742339822859325 -1.2377430062960197432 -2.2627687431582823585 -1.5030144200856287995 4.108928953046476984 -0.14466773922746400949 -4.1678470206458744229 1.3201805811488387388 1.11239904410063839 0.74353543040477421133;4.0245218940794780238 0.1417699388894032575 0.37202137005207847054 -0.43129110537551357263 2.6198216703856651577 4.683002184712593774 0.89139354229667433493 -0.15851556913563585871 -4.1000828523347303545 0.35144894901042084134 -2.1304212735029084413 1.6198513819046060913 -0.80289417603654766875 5.015547310052633101 -4.7136281717578638606 3.0577798326112430871 1.3328840832096997548 -2.5241460568043927459 0.20613984929677273139 0.14845853200790301574;1.4545458467625120846 0.7945230615112445216 -0.61800095464450033322 -1.1417953146693911037 2.4626753642453982351 -2.4868566751541627546 -2.5291874735452011258 2.7983773478239530874 1.7640617360454113882 1.0363059037479804836 2.1642986959163419414 -4.6536977498648619544 4.1381595405887194872 2.4818381773465088003 -4.0299210128872244852 -1.775161276953901579 -0.61953089849957576618 1.7716795156404467892 0.17103558474774571696 -1.8182656520630677832];
  
  % Layer 2
  b2 = -1.7919872051970036075;
  LW2_1 = [-9.7792548969682115967 -6.9130016957847422177 10.177864884282849189 5.5090008905160123831 8.7535088382329302448];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

function [Y,Xf,Af] = tp31cd96db_ebbb_4eb1_8b22_09a9d1d96861(X,~,~)
%TP31CD96DB_EBBB_4EB1_8B22_09A9D1D96861 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-Sep-2017 08:17:12.
% 
% [Y] = tp31cd96db_ebbb_4eb1_8b22_09a9d1d96861(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-5310.24104946905;-3062.40716175129;-796.678021735526;-751.778745457492;-962.879682501258;-561.234234396123;-567.818719457229;-566.708636588772;-460.813029179951;-650.116847383024;-365.703888775157;-279.141698173316;-258.595524643431;-352.492361124263;-290.108959264273;-350.309427866378;-268.266206223873;-201.923452595307;-200.676357162356;-227.093768231824];
  x1_step1_gain = [0.000187746732766858;0.000517587446146428;0.00076092913976903;0.00107683880161886;0.00113410115771159;0.00154637953830619;0.00191937835803698;0.00192268942981793;0.00211835684506625;0.00196958059572075;0.00268955398662544;0.00257377430529595;0.00284234016821657;0.00279908218986808;0.00409640929201512;0.00345584818973341;0.00422505290367577;0.00549698021899223;0.00471432618261883;0.00476878567270244];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [1.5239233580668238854;-1.1271554486986674615;2.4710316221054919872;3.3028433123989060505;0.0133775272776995649];
  IW1_1 = [-0.18125240362332498134 -0.47325600143740620407 -0.077783572812777770911 0.53013077370858840975 -0.42465315530134856159 0.70185018765512996453 -0.20519646770845442751 -0.54453966152321009453 0.54480923194334507365 -0.6143706712279761728 0.22752343650367901073 -0.2206213254644545374 0.0049071667431106061677 0.52977587842649820349 -1.0102676822132310441 0.3988911741687372059 -0.60118622728130421962 0.55992227992361409683 -0.10183592196931734453 -0.19999943528083613531;0.16301519113258003402 0.12192855035740995939 -0.2434960036083606838 0.4340575335305175142 0.0063126805165610736306 -0.35705405860601829859 -0.38207000124590068113 0.6996466063605375485 -0.20623693109410143331 0.30268586970460742425 -0.19256843711114504658 0.41690698267286480094 -0.08100761400133804635 -0.61971220876122579124 -0.32932578213565893988 -0.28735302839338794367 0.04063928226602038507 0.24162593478111438206 0.071366287149219428954 -0.7319637969092883667;4.9824841707741658325 -4.4449880790828011357 -0.30984601067916117678 0.91609818053999014786 0.6314154918529165661 3.3359702275848324149 -2.9210257449821130926 0.27117176855945179792 -0.64455554454951702326 1.4252988329487410457 2.2128528771131890096 0.11071865523692059341 -0.35436331680819221912 1.570357312042040876 -0.32010454694722778601 -1.5091955745365404074 1.6722308894602297968 0.10502650355226750278 -0.57706974500086882784 1.6141850460057900474;-0.41826104791173579489 -4.0520341925702885177 0.97407139642321172168 -0.76656583201351768952 -0.53827531354123558938 0.93681454306903899631 0.52377494042078875935 -1.2015681096068844269 0.24819685882348288541 1.3405787956680457196 1.3483555949699059795 -0.76096442429250887862 0.3653789979539966426 1.4712926046471204167 -0.16385773697745309452 0.36316442541099080987 0.94444886606474509616 -0.57894762830737112047 -1.7478591332920203616 1.2504229940059958803;-3.082447835404039882 -1.8039811806654661996 -0.56504657752006970384 -0.30653554194561749568 -0.8689909244127870247 -0.60901511437831123974 1.4068903674344603871 -0.78760658922408488536 0.13954290955563064536 -0.13651330703480124562 -0.64845513517823205607 -0.77020248779419642204 0.33058630897729152087 -0.46866362821149953888 -0.29556307300082257372 0.76950129656487942231 -0.47630722582842516255 0.66189147622272548332 -0.41467705133784105165 -0.024919196570588750955];
  
  % Layer 2
  b2 = -1.6698394049508686887;
  LW2_1 = [-1.9192035949143078088 1.7275326554523922074 -7.1922819640773809624 -6.2180185721457537085 -5.005523035849301472];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

function [Y,Xf,Af] = tp36b60f84_6e29_4f8d_a926_f18c3a9c44fe(X,~,~)
%TP36B60F84_6E29_4F8D_A926_F18C3A9C44FE neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 04-Sep-2017 03:24:47.
% 
% [Y] = tp36b60f84_6e29_4f8d_a926_f18c3a9c44fe(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1874.99930442497;-5454.91534726369;-869.204807020143;-780.471896742376;-460.205555216351;-234.31060487846;-540.291178237133;-572.142715533789;-192.819908210791;-760.602424664785;-210.820779921781;-212.784015206653;-286.590370604325;-190.320782432688;-193.663740648592;-194.470619647338;-373.10470912036;-213.719449945771;-260.914631799823;-176.115238468633];
  x1_step1_gain = [0.00034254044244578;0.00027748074658588;0.000806013241167019;0.00156677380853904;0.00168393926281428;0.00269046527889069;0.00198084992045411;0.00236361816544284;0.00245784730269609;0.00195235680232598;0.00282106579415897;0.00424658079482953;0.00317261769260759;0.005554586874619;0.0042972473647809;0.00484270636687457;0.00333931608099048;0.00598913897545074;0.00384783002604041;0.00642488839732229];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-6.4523644571563503192;1.2664867221601825431;2.2401732072571025611;-1.5806539609229011134;1.6140745609138840155];
  IW1_1 = [-5.0600471715571666564 -4.2573926261798060722 -0.1756212017503360201 -2.4221356651865137977 -4.4342425876625348735 -1.2731898519980155982 -1.0090373907544138987 5.6128648746739724373 -3.6572500162087484554 0.76358619410438521857 -1.5764361554046684155 -1.2810605556843148722 1.8625463389377707735 -0.60922564971143455814 0.54785140248866837087 2.6859172695459556657 -1.2956491885027587863 -0.58876727249222537974 -3.4844437167461927984 2.0655592449973241287;-2.5264729008594848381 -5.0237114568806369164 -0.46571110543068761078 3.5603229780758245404 -0.93112038370947414201 1.1662473381187989929 1.222209348537782958 -0.021650988439511596739 1.5007910736866933998 -0.6038226795768818489 -2.2670867506711873673 -0.8155320475786048684 0.2918450681441797645 0.35995803091603761903 1.8871985382630145356 -0.021389232022649962844 0.94854111334794077859 -1.1512510996507392402 0.11577248818813597186 2.3276786520610017739;2.5413855798212789949 5.4183550996118405862 -1.6715396709123175878 -2.3446037121586047469 1.2181811673308484689 2.1859479445288312327 -0.27944066519358534695 -0.89043076538169119161 1.1082141585841456255 -4.2543744449553697606 -1.1523525274753441128 -0.010528535357274840245 0.32566892736360264493 0.66846031778615366825 -2.2075330897393974361 0.47877314506286533513 0.79572301695273750521 -1.3367479346361232917 0.5985324660018028764 -0.49720290077709966559;-1.4466213031749399764 2.9310456248242333643 -2.1055191675224809167 2.1511954520430633941 -0.030954165374547704115 -0.37101673369589399654 -1.0112062517562183661 0.78445813734228841962 0.27331857998022018874 2.4492464705283234494 1.9610720123758731415 0.52743243781469428821 -0.66638372063905970677 -2.229624644323007665 0.83768217925011234648 1.6487907841865061531 0.30628048490250564528 0.70107197814805699565 0.0064212673876559035052 -0.28701538435123385984;-0.50189291097989285895 -2.3294473393607866285 -0.24333193869527883213 -0.015211658746724091712 -0.18559437707199843981 0.47419725398988560316 0.63742895461406512414 -0.50017816258480096714 -1.1070908223570397055 -0.5190521084208976621 -1.1048399946136138183 0.28720402048649895654 -1.0252131863571336545 0.23468356135917189942 -0.82639675002510126767 -0.16964367683963421651 -2.3422521500758377577 0.018570176990445410453 0.20411447212477454305 -2.4704236403519788112];
  
  % Layer 2
  b2 = -3.5502130658634984961;
  LW2_1 = [-12.641946188696900677 -8.2841115383850638665 8.105312930252807746 6.9666210603255134259 -6.3637863240645877738];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

function [Y,Xf,Af] = tp411a6bbf_69b2_46b0_a4f4_8ffeac071630(X,~,~)
%TP411A6BBF_69B2_46B0_A4F4_8FFEAC071630 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 07-Sep-2017 14:21:57.
% 
% [Y] = tp411a6bbf_69b2_46b0_a4f4_8ffeac071630(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1874.99930442497;-1752.79194273022;-1612.14400693261;-780.471896742374;-460.20555521635;-234.310604878461;-540.291178237133;-572.142715533788;-620.900292310247;-263.800490630852;-210.820779921785;-258.183122033538;-286.590370604325;-169.741999038737;-193.663740648593;-218.521589353926;-373.10470912036;-120.218367860414;-260.914631799831;-135.174215342507];
  x1_step1_gain = [0.00034254044244578;0.00027748074658588;0.000806013241167019;0.00156677380853905;0.00168393926281428;0.00269046527889069;0.00198084992045411;0.00236361816544285;0.00245784730269614;0.00195235680232594;0.00282106579415898;0.00424658079482949;0.00317261769260759;0.00555458687461899;0.00429724736478087;0.00484270636687453;0.00333931608099048;0.00598913897545115;0.00384783002604034;0.00642488839732233];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [3.2202088219839781758;4.7782512335795841452;2.1669219485514816803;-0.5001631394583359036;-0.37196451083730680542];
  IW1_1 = [-3.3881640121894234241 7.1178690084929012727 3.7911866814725323493 -0.66743180074145713743 -1.114284327519871054 2.9942733148641940133 3.4757619591257107317 -0.81354971634929107438 1.1340458643263708893 1.3906805608048684597 -2.9827176389158798209 -0.33780556998681388059 -2.1535765081036011281 1.3229569555785336554 -0.48368481699546167496 -1.6177638701608259009 -2.3570561986382951858 0.72174372503807759927 2.3114923985498707637 0.16935777063539889098;0.0069500730260347916983 -0.23952341005123797824 1.0191727185129300093 1.258326784469756543 3.5495278318136835871 1.5528552258326808744 2.8991717690223426374 -3.4212561861191113088 -2.0195826823717037968 6.4254787092250635894 0.93816595789960677276 2.2939440118877296726 -2.3728037547976330579 -0.60861468848909716645 -1.8034417538736742248 1.9690332172788915788 2.3278340768439349517 -0.37709059945104839162 6.3592333046189413182 1.5437779358419381204;5.1794846874178137597 -5.6858765511936866233 0.79961359382596886025 0.25259508802230090652 2.9263901100701077418 0.46467420199324632746 -0.33119482167270924977 -2.147462159357202971 -0.2181243247422932352 -3.4341592832194760554 4.9248400554898772441 -1.7956129438732075787 -0.85818535740733392636 0.45690037720277587585 -0.70867939475144658967 -0.58824295677554649941 -1.0512995876059678668 0.22927216915831505339 -1.1062161702284822873 -0.21540043538551101321;-4.6184942634242283077 -0.60893993426754611242 1.864042544421223635 0.89638342131172799032 -1.0176423318847354071 1.0227051287972206417 -0.044022086246848245172 1.12624926339773479 0.30907319757478918243 -2.1668447433951767422 0.5736160033934911695 -0.79845312167161897055 0.38132080608402557642 -0.70107304038164397486 0.73172544967726871334 0.34104685182120070275 -1.8850085480817406758 -0.11212004313796851418 -2.1576516288310840785 0.86549246560584958132;-0.90267134657628178562 0.30519790812232377997 -3.0178425509975386198 4.0994831928397159615 3.0898105846432972754 -3.5134778291584209953 -0.77077603566657026946 -1.6165515055260220034 -0.11470018515248285584 -1.076042267638256611 2.8791257023789684766 2.7686268964318481167 1.6268288723724413369 -0.49254708043261435924 2.3682636548801725418 2.8120864904103464177 -1.5707484260901161122 -0.42697184597150822372 -1.8304333448927578853 0.56689167391923944717];
  
  % Layer 2
  b2 = -0.51020544385603427973;
  LW2_1 = [-6.8025308135933171272 5.4884421616491705365 5.2588838698478159728 4.7732983507789645827 -4.5680004157669795717];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

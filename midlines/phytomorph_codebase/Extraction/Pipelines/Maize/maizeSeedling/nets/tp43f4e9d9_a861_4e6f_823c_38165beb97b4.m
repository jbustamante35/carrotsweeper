function [Y,Xf,Af] = tp43f4e9d9_a861_4e6f_823c_38165beb97b4(X,~,~)
%TP43F4E9D9_A861_4E6F_823C_38165BEB97B4 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 06-Sep-2017 16:27:55.
% 
% [Y] = tp43f4e9d9_a861_4e6f_823c_38165beb97b4(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1710.79601884287;-841.368302509966;-925.675633657014;-538.97327665492;-819.861160368643;-861.95307614228;-996.664725988395;-421.625702789092;-721.553885286553;-557.274532479567;-502.132109545489;-541.944235264817;-543.177005191318;-167.207345824927;-448.973304658439;-294.401776402715;-391.010406370086;-235.625647900192;-174.294824484547;-301.038307242067];
  x1_step1_gain = [0.000202107905561193;0.000554219398814734;0.000742185534904077;0.0010185341647551;0.00103332655312913;0.00147681597144007;0.00118221307527393;0.00265958726683849;0.00125235891924471;0.00165285753177999;0.0023286012823718;0.00188013184297682;0.00198822427969293;0.00479968082327789;0.00252047169225128;0.00363117206158391;0.00272984263620494;0.00383651951608912;0.00502254586493069;0.00330771328744474];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [2.0596029190031033274;3.4724510058906408183;-1.0545863874505359004;-1.4380445596292728005;0.91401642655944304039];
  IW1_1 = [6.2869081373373898458 -6.5393485336674714858 1.7275966903992645562 -3.5803197774512494078 -0.39144027132348918618 0.16104806038018462666 -0.77178467751607748859 -1.5057442228888289204 1.8517854071327037868 1.9246230156051418181 -3.2063476481729038525 -2.169989316778312638 -2.1190514165705947036 0.21712505357482136947 4.1685743682661087206 -0.95052848767296882482 4.1010426514912259321 -2.4612818181038669252 -2.2611585536812768282 0.028267782449914607285;2.7522958366859286983 -0.91720630248535195417 -2.4523822604580400863 1.9108352101223167185 2.7436646184246962221 -4.4917860080113412025 -4.6097066172884444413 2.1105400654469304023 6.4837172189515515086 1.741616444118953666 2.6890832265586355199 -1.4542789266595674835 -3.3554451901239672473 -2.2076150104806746555 -1.7189820453734359074 -0.47296876155699696387 3.1382606454499999415 0.68029221489454316796 1.0303289579763090789 2.9281131055845173172;2.0353412994816406645 0.084185970944309518327 1.6654490913179382794 -1.3904747462632425226 1.2835403801800497892 0.39454365335730495756 3.1771259223014083339 -0.095115035911730497209 -1.4353735372296456685 -2.567427739221121108 0.037037000930590639747 1.0476720451967524994 0.56357217919800695061 -1.5794300981295139596 -2.5906969800237455992 -0.28304581669897010965 -0.95465183427618993672 -0.25605316873865391347 0.78316528015474129454 6.1526067093861067647;3.6972834994155960864 3.4368652198928395514 3.0268625061694462985 -1.2150237453436443236 2.4186464638441091957 3.8165447375263696905 -3.3121205811160137067 3.7133302390700007045 1.8941259939024777115 -0.10528270189140351287 0.04659298343076668375 -0.16089755666303129367 0.15863645638867884813 -1.582142426057528084 -1.819178570867678868 2.3561765789795163784 -2.3249879975158647127 1.1847840548901078517 -2.3175336843920719687 -2.7092257222746227718;0.57253957287036683077 3.7284614175067738451 5.4474866290759988985 -0.26278931439204838982 -2.3992246226795179709 -0.084875100278748352722 5.5295157999042761077 -0.39175494642562425085 -2.3009714018224327603 -0.19629091106833654323 1.8693350148058205384 -0.16661677319140966169 2.3686568008893322812 -2.3205651446187145481 -3.4098227781654322222 0.75118519227347702039 -2.7664308483167037167 1.005464912582790582 -2.1760831182838220599 -4.7067378496524296949];
  
  % Layer 2
  b2 = 2.8897222642457616182;
  LW2_1 = [-10.015162192509150074 -9.5650364693937994787 -12.66379162808877723 9.7524118345911556816 -8.7183230686441497426];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

function [Y,Xf,Af] = tp4ffbf5b9_564b_49b6_942c_e25f3b5cd777(X,~,~)
%TP4FFBF5B9_564B_49B6_942C_E25F3B5CD777 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 07-Sep-2017 23:39:27.
% 
% [Y] = tp4ffbf5b9_564b_49b6_942c_e25f3b5cd777(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1874.99930442497;-5454.91534726369;-869.204807020143;-780.471896742374;-460.205555216351;-234.310604878461;-540.291178237134;-572.142715533788;-192.819908210792;-263.80049063085;-210.820779921779;-258.183122033525;-286.590370604325;-169.741999038736;-193.663740648592;-194.470619647337;-225.820325675029;-213.719449945756;-258.858847398814;-135.174215342501];
  x1_step1_gain = [0.00034254044244578;0.00027748074658588;0.00080601324116702;0.00156677380853905;0.00168393926281428;0.00269046527889069;0.00198084992045411;0.00236361816544284;0.00245784730269614;0.00195235680232595;0.00282106579415898;0.00424658079482959;0.00317261769260759;0.00555458687461902;0.00429724736478086;0.00484270636687467;0.00333931608099042;0.00598913897545099;0.00384783002604034;0.00642488839732261];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [2.5070213265278233905;-3.0983894514145817745;3.2249330307319961086;-0.18511564873529157138;2.8941884188705579994];
  IW1_1 = [-2.861754940849862372 -2.2903110339006707008 -0.46708354102728993906 1.3767248206885240869 1.7037042812120106738 -1.8987473059930513042 0.81512812846320081839 1.275333888774164981 -0.23486122933413292047 2.7734573793682102405 -1.4444872444136174217 0.7984685064934561316 0.82804677860880504525 -0.60138147914909279024 0.4799048790598058889 0.23048977421538588417 1.6407358495156554312 0.19064643616546844695 -2.5908515682335293562 -0.20929788702711629722;-4.9874490279054679576 -6.7424747612606417135 -0.66629809904962367106 1.1025181661227501095 -2.6639208584187397122 -0.4632169707520753521 0.40951695068743082517 3.2139112291525360199 -2.7651387001692997458 -2.3094501292777191992 -0.044176123582232607045 -0.61044807885228380417 0.45553498917992130135 0.25735560255980344246 2.9090202859863572016 1.7963362272700704736 0.95595741335710349151 -0.31551940226471142381 2.4547549768789016511 -1.2869002055013938346;0.87082898309290335259 5.8903863659565525168 -0.074155107539488104851 2.0410625044190457977 4.1088901867573506266 1.1815959206094368561 0.073253957822265805544 -4.9366029105510174091 1.1915060853511039163 -0.94052481183768188444 3.085723128213346822 -1.3683808090496669685 -0.86297114361835702834 -0.81777615191138575135 0.41357688644415041557 -1.9315400455195914642 -1.040299282625111843 1.2305966934381846745 0.018311702084361246301 1.2268833569403247985;-1.655726150589784007 3.8618641947010390325 -2.6959365564571373675 -2.1652932419071251324 -0.58738559736308704196 2.2150913801659810609 -0.20546993816999753468 2.5223686398223152949 -1.291380715432168369 0.26824577654122139236 0.94029986747935923042 -2.5788448502226692938 -0.65306491956049572689 -1.4864435594574103572 -0.7901523232334258795 2.3931789451599922991 0.78796493173739057259 -0.15653319940160220769 0.95936969672030936174 0.4447345459705885351;0.35508381185166010274 1.3317971522853797595 -0.78232933239942137327 -0.56378634605581401384 0.063565242861913742733 -0.57548515051928350594 -0.10343343049542123857 0.72377280132886334663 -0.79516985670245821094 -0.04599696625544498485 -0.56807659872655080768 -0.33277299140621424689 -0.48352756022667842117 0.055691977581292302635 -0.47889649742009965383 -0.10626239346042241907 0.14727907351406493985 0.036485067358947173566 -0.58220592058586728701 0.11870593276465626897];
  
  % Layer 2
  b2 = -4.0902032998261788066;
  LW2_1 = [-6.9688362420048761692 -8.9464193709155370726 9.0416816871605956152 7.0849151860259000912 -2.4669924989847475949];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

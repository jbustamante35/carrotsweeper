function [Y,Xf,Af] = tp51f9bdc2_3c93_42b8_9a7b_bdd0517d890f(X,~,~)
%TP51F9BDC2_3C93_42B8_9A7B_BDD0517D890F neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 06-Sep-2017 18:13:59.
% 
% [Y] = tp51f9bdc2_3c93_42b8_9a7b_bdd0517d890f(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-839.604414481265;-7316.69285265061;-873.097427232645;-1646.05375716083;-423.333970720151;-622.82412415429;-410.542636124642;-168.317352166541;-564.250103325883;-280.547165434102;-739.082929249854;-246.980329538394;-167.382252836754;-134.941855531039;-141.91034671109;-156.623146275716;-201.347350487852;-147.229750402553;-715.253580951021;-185.84737802357];
  x1_step1_gain = [0.00043525835929838;0.000254266760874674;0.000347353003038839;0.000777513986910232;0.00172505617054034;0.00206247464333953;0.00302249934878053;0.00323098252238304;0.0022061463558428;0.00242812082773063;0.00231897377235335;0.00407495867726255;0.00341201206501259;0.0055137841597173;0.00648970220781303;0.00620026189110788;0.00633602455501839;0.00774864116842997;0.00243421857993233;0.00313801600663409];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-1.2280006228319462203;-1.7519712256247099713;-1.275941211821989052;-1.4011145834052693981;-0.59739229041014862975];
  IW1_1 = [0.49035204074700416976 -0.95375313259743188521 0.95304757009205964824 -1.1340296366875080025 -0.27604050423224640864 -0.37164925725899705666 -0.10858747852607333884 0.22943597763285944469 0.20681552687380377886 -0.5476900953736806299 -0.29898740232724124732 -0.068352111961895667402 0.23735717066492215133 -0.27279910256092915199 -0.041779083790595979153 0.42733117289327959831 0.48395749023260209443 0.0021253539909471888536 0.70846927238828560913 -0.58160073622257613124;-6.1164841687115698576 -1.7857822375536529513 -0.25600988633942128869 -2.257486596936003842 -1.3612212925430564603 0.030175024297186651967 -0.60935536086906716413 1.7495873575750122697 -2.0022527289868725653 0.27985319806564046274 -1.1758818731266900137 -1.6639087556461740203 -0.17191768577719240829 0.2236803447569579717 -0.174557444490935465 0.29962445924959252297 0.48428866978908607921 -0.47853906183271194275 -0.093905092987597013621 0.21540075780082096335;-6.8386354406254916682 -1.4124510567883701295 0.15752113767725325899 -2.8870414036018181569 -1.3064917012326249246 0.22713938795896487788 -0.65104648224341465923 2.0134884722289632109 -2.35919905404899799 0.35099005302458513578 -0.72582153164932805556 -1.3577588652761458654 0.78537098031704088985 -0.069111351436364862333 0.046335446286409384675 0.32969526599161286251 0.7453121088789850246 -0.46879365230362984862 -0.71554442201369627963 1.0906426839554275166;-0.43014877837971149388 0.46593454927547872657 -0.2724104689846919003 0.14659987142749403288 0.59568592698839961663 0.39308043194571723467 -0.31470495218877958532 0.64723882165689750057 0.094015982090761188172 -0.013937164235828703937 -0.89750222011658309373 -0.47029294082691541767 -0.12382376708319087211 0.54620711204553362705 -0.031439717909902242798 -0.24784355348941469743 -0.4080799409452894877 0.40330743455606610226 -0.84363552553363163611 0.14256067171751327094;-5.1708530672284238605 -3.763143792532584353 1.879612011249610859 -3.9224280098494670455 -1.7487723784035589247 0.93011447617954567946 -0.53443382533251926336 1.4516102527896856955 -1.794896253157140853 -0.2455363763755147033 0.0621568943763036591 -1.8100032121154738807 -0.86772536274977751791 0.0381190406395923026 -0.071875708971227858513 0.77667391079088754502 1.4755397486768417892 0.10373248834807588525 1.3582819489521995582 -0.0049729222720857960138];
  
  % Layer 2
  b2 = -3.465430175542505431;
  LW2_1 = [-3.541346461974103299 -6.1698167393767109346 -6.9910858742228505491 3.6311675298014001179 -10.466520244083595159];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

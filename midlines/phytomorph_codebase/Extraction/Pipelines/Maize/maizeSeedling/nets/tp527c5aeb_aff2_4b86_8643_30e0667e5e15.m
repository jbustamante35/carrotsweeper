function [Y,Xf,Af] = tp527c5aeb_aff2_4b86_8643_30e0667e5e15(X,~,~)
%TP527C5AEB_AFF2_4B86_8643_30E0667E5E15 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 05-Sep-2017 04:03:11.
% 
% [Y] = tp527c5aeb_aff2_4b86_8643_30e0667e5e15(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-839.604414481265;-7316.69285265059;-873.097427232642;-1646.05375716084;-423.333970720151;-346.884767278008;-251.161393954615;-168.317352166507;-564.250103325791;-280.547165434103;-739.082929249993;-246.980329538455;-167.382252836746;-227.785437026334;-141.910346711056;-165.943873492989;-114.307991853887;-110.880020914335;-715.253580950984;-451.498000639945];
  x1_step1_gain = [0.00043525835929838;0.000254266760874674;0.000347353003038839;0.000777513986910229;0.00172505617054034;0.00206247464333953;0.00302249934878054;0.00323098252238345;0.00220614635584283;0.00242812082773072;0.00231897377235287;0.00407495867726437;0.00341201206501313;0.00551378415971559;0.00648970220781256;0.00620026189110762;0.00633602455502145;0.00774864116842971;0.00243421857993234;0.00313801600663361];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-0.48855590882193994373;1.4543768699961818758;-0.40731085361406033085;0.85499176705828383582;0.2139182166204822988];
  IW1_1 = [3.5426063155385869585 1.9765719334942155605 -1.0729772908633794515 2.3089699596840382867 0.44294485994157911657 -0.89433321034391422 0.11986983603284796784 -0.80308905481502990131 0.14479662155037015259 -0.51481999617637796973 -0.41913254143413430919 1.2739887434930532439 0.79125654233741082866 0.6935829148754818485 -0.89260974831639106064 0.80714746814383420137 0.8651450810382861345 -0.13667151962506712826 0.026909189138294466181 -0.32627651424470599517;8.2705778692771669824 2.5256465837245767325 -0.64686610224482388176 3.9140255739661666823 1.4500185813876085295 -0.38584692191544850415 -0.10407257637187533605 -2.4642506951971716589 1.8467031831476679038 -0.059358603225749255461 1.1314715357998332834 2.8921598700916462121 -0.24266194632574125678 1.7010765140599963807 -0.66576844624330666633 0.27907698025336047376 2.4823336368597730406 -2.3739404893984534795 0.23744510375757252318 -0.13880806525067121426;1.569197742577022936 -1.0490515332280123673 1.8834902106173883052 -0.54279718900187345909 -0.088016875106098124704 -0.26931907938642757339 -0.052707979920360858994 0.39051608810402721472 -0.24126922290192345799 0.033885442334430547484 -0.052998370826050376914 -0.55941508778536541691 -0.07460099599717606722 -0.48068092744998119903 -0.36986305393526064389 -0.27697044827444716741 0.24340360844748476499 0.5760150988003835959 -0.13962271603513518037 -0.23744807079044449871;-2.7224714947105912444 1.5662461991508693782 -1.6163987764075435916 0.71770131945754378489 -0.79963347623858815894 -0.22181152744131737986 -0.76517537040815863936 -0.2469821002325435777 0.75929726611821701798 -0.91870591069525708861 0.66554586900556367279 0.50871512634724613822 -0.66682426324321220079 0.068200584399772889999 -0.11223885483060824786 -0.09171553345284533254 -0.71896491842330167987 -0.34949116777508537623 1.1687803082208212402 0.11052623174792206018;0.78615938558041675854 -1.3793738431608053574 1.0321645875603737696 -0.71049649493641531262 0.6828253794030253454 0.29950118716760437687 -0.069076706769676504694 0.47151680413150759419 0.37229300681207666557 0.46193816558947575768 -0.32666544817001136325 -0.68741073927507734265 -0.09348363137795230593 -0.84827772460503136909 0.5668664617029650632 -0.36241842341657598547 0.091199910216191948376 -0.59008320801989755378 -0.41487545893949040465 0.29732635421522235486];
  
  % Layer 2
  b2 = -7.5137155098891881266;
  LW2_1 = [7.1411433865066555882 12.482305691001318593 -1.4913434498542026407 2.7949496663249449036 -2.9587657225309822451];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

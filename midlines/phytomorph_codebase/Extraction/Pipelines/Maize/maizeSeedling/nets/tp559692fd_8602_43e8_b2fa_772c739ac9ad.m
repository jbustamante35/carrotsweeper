function [Y,Xf,Af] = tp559692fd_8602_43e8_b2fa_772c739ac9ad(X,~,~)
%TP559692FD_8602_43E8_B2FA_772C739AC9AD neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-Sep-2017 03:17:15.
% 
% [Y] = tp559692fd_8602_43e8_b2fa_772c739ac9ad(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1710.79601884287;-841.368302509968;-925.675633657013;-538.973276654919;-1115.63541033651;-861.953076142271;-996.664725988393;-421.625702789078;-721.553885286555;-557.274532479556;-502.13210954551;-521.810951623242;-543.177005191319;-167.207345824973;-448.973304658422;-294.401776402702;-391.010406370092;-285.680184537929;-174.294824484566;-301.038307242054];
  x1_step1_gain = [0.000202107905561193;0.000554219398814734;0.000742185534904078;0.0010185341647551;0.00103332655312913;0.00147681597144009;0.00118221307527393;0.00265958726683855;0.0012523589192447;0.00165285753178002;0.00232860128237171;0.00188013184297681;0.00198822427969293;0.00479968082327745;0.0025204716922514;0.00363117206158399;0.00272984263620493;0.00383651951608934;0.00502254586493014;0.00330771328744488];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-1.9080103300865192129;0.1790557574193995527;4.5072534384423406095;-1.3372924666288423801;3.488293649253900508];
  IW1_1 = [-0.62377498602496062041 -0.77399783506738017991 1.4295418614770893928 -2.0297217540892220633 0.68376245479196340327 -3.2694935267274738422 1.1007450585240758922 1.4394785077147027597 1.605095060240469218 0.21959466726869683595 2.0996227715523572144 0.27227500575013591222 0.48433915308861186233 -2.2702832846070521988 -4.2552938868857381749 0.53620185461556502116 -2.8237225970875239334 -1.2220104879168021128 0.65280498259822150597 2.1237386225206815737;2.2734265799164590227 4.7194538754068329212 -0.15293701635813369832 -0.72521281618297217531 -3.0211823846392165116 1.6378795543564341752 -2.3937533334993785772 2.8907425406392053269 1.907504142048186857 -0.48087480432947493636 -0.77731171301382895322 -0.32022777334374502578 -0.11328635603368615581 -1.8737526967264059863 -1.7891295049104782855 2.1077050219676731757 -1.4123869918065354856 -0.36831170482307001857 -0.81617845148503198605 -1.0034651410232100499;5.5263408555459356819 0.041179819516726431927 0.37256619456457246153 2.6705193970004650339 -1.0876655318984016496 -0.9537313439585997088 -3.6818123988192450469 0.73921766701057600724 2.6247387718552750435 0.97148289046179270301 0.91320420276611724564 0.76239832889737790822 -3.4283848288444054297 -2.4969895743733361293 0.72485899721641910975 0.10502450928372930594 3.533734462597298176 1.2226070627802967383 -0.7263823174553498685 1.2316054674339529384;1.9647713295487572172 -0.39989813536698948226 0.89729397366156404825 -0.86171331045941357285 -1.7298096080017864029 0.27430787633675079995 2.5271546435999554525 -2.0845683095954252728 -2.1943310174079995178 0.16594272339905191682 -3.3699405421405441707 -4.6837940015532639748 2.3046180448766904192 -1.2725510658350149829 -5.1470298065492610107 -2.0424555694261905536 -2.8395950723448666331 3.6812059162932881939 -0.69437380091124079051 5.2993784206213261356;-0.36029540869856357954 4.9668215211833866007 -2.6430844730993405811 -3.2400285002954962721 -3.2412932408599131051 -2.7951800038124989811 2.2984511892332619709 0.48889715694559587877 1.5496749375957743489 -0.99412127735126742945 -1.3123778301206365793 -0.28524937918738874076 -1.8810621171262200679 0.24526408569522020753 1.250461425862521736 -0.25173824348218676317 1.0552055436444907066 -0.75087075366267852505 -2.470512025954176849 -1.8588225307995529523];
  
  % Layer 2
  b2 = -0.34327281415060179048;
  LW2_1 = [-11.245366485978884441 10.629425282921470597 -14.103711517292898847 -7.8118294411204205474 -7.3731602297075866659];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

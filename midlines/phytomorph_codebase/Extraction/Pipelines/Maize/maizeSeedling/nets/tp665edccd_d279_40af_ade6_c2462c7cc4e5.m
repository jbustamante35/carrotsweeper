function [Y,Xf,Af] = tp665edccd_d279_40af_ade6_c2462c7cc4e5(X,~,~)
%TP665EDCCD_D279_40AF_ADE6_C2462C7CC4E5 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 31-Aug-2017 09:44:35.
% 
% [Y] = tp665edccd_d279_40af_ade6_c2462c7cc4e5(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-5432.21511079255;-863.132365464487;-1030.35626722576;-451.327248716541;-690.44212430168;-440.923810847592;-781.659803211375;-311.51681067561;-659.850047510501;-416.874768568234;-250.644035779492;-272.098158795956;-389.737207411751;-200.812705665954;-311.371005878036;-287.447714627273;-270.705877196434;-189.900188905715;-161.960068441817;-167.395512112006];
  x1_step1_gain = [0.000193639844679507;0.000635136090067476;0.00107257204462677;0.000992521373387898;0.001400986781616;0.00179249040902968;0.00152180852073822;0.00263160812648068;0.00198686103343278;0.00250748142155719;0.00458743324706927;0.00371176793861462;0.00296778207281833;0.0044891509337776;0.00365879017755092;0.00377014651183239;0.00363538636865137;0.00429258503045382;0.00587388837253332;0.00612684175841658];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [2.7483067850861115922;-3.711746612101976428];
  IW1_1 = [0.25298100604580769923 -0.51343819848785654525 -0.41689563160942194608 -1.951119711462671269 -0.47009447547376032039 -1.0761827697550789829 1.4432415999405361351 -1.1396283294793210228 1.7525654580909912905 0.56096450634947914171 0.55991879800039312531 -0.55511005820689718337 0.90008027653195998852 -0.19909454166205503567 0.52650484740240366399 0.68185188546480635097 -0.14210757243836094621 -0.50208848106778669607 0.054065627109656795579 -0.079202129057152917402;0.35539187118515747077 -3.3053060198927832758 0.74710444152524957406 0.64213172513025607024 -2.4061827540022098226 -0.54875481765609757101 -2.3777004482376447037 -2.2607285633717189022 1.7489591951963037175 1.0692061023125418728 2.3940576573811611638 -2.1855109310882894214 3.1834400319807008017 -0.59330937128784078105 1.3583026258572452605 0.84360287289245483588 0.40431884501063591886 1.5847094809739659116 -0.33512949218421683728 0.86539272655842069959];
  
  % Layer 2
  b2 = -5.5763099289875741604;
  LW2_1 = [5.9465634025086959724 6.4427595028423301216];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

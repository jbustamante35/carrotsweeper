function [Y,Xf,Af] = tp744ae0a0_a3d0_4141_ba43_e1c739bf485d(X,~,~)
%TP744AE0A0_A3D0_4141_BA43_E1C739BF485D neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 31-Aug-2017 10:06:00.
% 
% [Y] = tp744ae0a0_a3d0_4141_ba43_e1c739bf485d(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-5432.21511079255;-863.132365464486;-834.320338899994;-1563.74270708012;-690.442124301703;-440.923810847592;-781.65980321137;-448.474762490213;-659.850047510508;-380.738319531133;-250.644035779486;-272.098158795935;-389.737207411726;-200.812705665959;-235.257771107125;-287.447714627212;-279.441974279615;-189.900188905722;-161.960068441811;-159.036943443484];
  x1_step1_gain = [0.000193639844679507;0.000635136090067477;0.00107257204462677;0.000992521373387899;0.00140098678161598;0.00179249040902968;0.00152180852073822;0.00263160812648064;0.00198686103343277;0.00250748142155716;0.00458743324706948;0.00371176793861511;0.00296778207281872;0.00448915093377756;0.00365879017755124;0.00377014651183386;0.00363538636865047;0.00429258503045411;0.00587388837253242;0.00612684175841828];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [6.1095377284049687816;-2.4641018192319412705];
  IW1_1 = [0.13700465062223085577 5.0993093090002421519 1.5372001324399235944 -1.2251178071188222329 1.3897159576922468727 0.056692071798988497022 4.8584771137220270631 -3.7965666437327785232 -1.5476841713752089724 0.9082583949916799293 -2.9556032802398961579 2.6340304784600299115 -6.1603128152643815696 1.3965185639758963543 3.6048671789468191839 -1.3928179898972015138 0.90547131838177408181 -3.8988875098552542298 0.30786175471190396769 0.95556911625154894452;-0.10556199627681019104 2.084411492340811467 0.2225786422473890469 -0.86179579256130167675 0.57919907087308264426 0.45010786812008957147 -0.56982329846753188018 -0.79790824047498765115 -0.97305659028591229287 0.19002815088730526383 -0.95456914564244443877 0.28902765429459309487 -0.21279247735601647395 -0.075101328738400890961 -0.084195335683512090297 -0.037589494964658590193 0.26551500431932262281 0.91510671892754580359 0.30633933046226741181 0.35670108188507815283];
  
  % Layer 2
  b2 = 3.5739537446670546217;
  LW2_1 = [-13.799512304329860868 3.7728004646932919997];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

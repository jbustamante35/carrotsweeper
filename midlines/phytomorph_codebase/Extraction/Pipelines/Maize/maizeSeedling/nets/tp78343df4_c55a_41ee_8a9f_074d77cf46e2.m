function [Y,Xf,Af] = tp78343df4_c55a_41ee_8a9f_074d77cf46e2(X,~,~)
%TP78343DF4_C55A_41EE_8A9F_074D77CF46E2 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 31-Aug-2017 10:16:54.
% 
% [Y] = tp78343df4_c55a_41ee_8a9f_074d77cf46e2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-5432.21511079255;-863.132365464487;-1030.35626722576;-451.327248716539;-690.442124301689;-440.923810847592;-781.659803211378;-448.474762490208;-659.850047510516;-416.874768568234;-185.329610546072;-272.098158795914;-284.166721828054;-200.812705665946;-311.37100587802;-287.44771462717;-270.705877196876;-189.900188905703;-161.960068441824;-167.395512111971];
  x1_step1_gain = [0.000193639844679507;0.000635136090067476;0.00107257204462677;0.000992521373387899;0.00140098678161599;0.00179249040902968;0.00152180852073823;0.00263160812648068;0.00198686103343279;0.00250748142155717;0.00458743324706899;0.00371176793861522;0.00296778207281889;0.00448915093377833;0.00365879017755094;0.00377014651183371;0.00363538636865025;0.00429258503045462;0.00587388837253388;0.00612684175841834];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [1.4015531604977440328;3.8019204796422552128];
  IW1_1 = [1.054415473701347139 0.57641709745225677697 -2.2882191069249744331 -2.3257718742051514127 3.7660823281880366764 1.5577674500543872149 0.97099774156866125452 -1.3122230338820048967 -3.0924013058531842901 -1.5620236806110743277 3.1218742112374968656 1.3212651215964272833 4.0336706728097588837 0.58851436429119607929 -0.95165755366377546842 -1.0379648075185463618 0.50337982259341151892 -1.9473897731787166432 -0.61592321705031349843 -1.264663507272738352;-1.7491897579039223931 4.8782484194206645611 0.64027784275195065433 3.1577546559950810945 -1.2584745533837731202 -0.74675890379402876107 2.5055713622056083878 -1.4790420883509516337 0.61029853721725091376 0.38492088472022245593 0.63203359264599889844 1.7081411363741758613 1.3165549613838942733 0.095084992044918381637 -1.7663123912842952912 -0.79854838226867708162 0.1092151076972037449 -2.7653464938859984024 0.15035383300366289561 0.41059838804933040945];
  
  % Layer 2
  b2 = -6.9517235710741998034;
  LW2_1 = [-9.551483168690237946 -9.6960982454836184274];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

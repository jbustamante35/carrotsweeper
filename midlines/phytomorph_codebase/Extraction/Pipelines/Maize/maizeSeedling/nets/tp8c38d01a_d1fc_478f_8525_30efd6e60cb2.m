function [Y,Xf,Af] = tp8c38d01a_d1fc_478f_8525_30efd6e60cb2(X,~,~)
%TP8C38D01A_D1FC_478F_8525_30EFD6E60CB2 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 31-Aug-2017 09:55:15.
% 
% [Y] = tp8c38d01a_d1fc_478f_8525_30efd6e60cb2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-5432.21511079255;-863.132365464489;-1030.35626722576;-451.327248716544;-690.442124301688;-440.923810847593;-781.659803211376;-448.474762490208;-659.850047510513;-380.738319531121;-250.644035779537;-272.098158795924;-389.737207411713;-200.812705665951;-235.257771107113;-287.447714627267;-279.441974279735;-189.900188905741;-178.529888662567;-167.395512112037];
  x1_step1_gain = [0.000193639844679507;0.000635136090067475;0.00107257204462677;0.000992521373387898;0.00140098678161599;0.00179249040902969;0.00152180852073823;0.00263160812648066;0.00198686103343278;0.00250748142155725;0.00458743324706902;0.00371176793861517;0.00296778207281885;0.00448915093377763;0.00365879017755126;0.00377014651183269;0.00363538636865078;0.00429258503045374;0.00587388837253353;0.00612684175841757];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-2.8000158298382551436;3.1787973447782302827];
  IW1_1 = [3.0656936082581718317 -2.2050974648522791988 0.13916952519036268621 -1.6303345115276837163 0.32094474061432420875 -0.55313552453903858108 -1.6667757869796000492 1.0883647491820940267 1.2287093884375011044 -0.47825500622218741764 1.1381627654073278588 -0.91265652175077816022 1.1372940748152837731 -1.0773662130606864729 -1.4305592189057081409 0.1462191239621745964 0.56093693288483192916 1.5839292125227666386 0.36927279686591341079 0.63288233464740817347;4.419972130342901373 3.9903931698979282494 -2.6943814514045056896 -1.6540547666455800435 3.0281568201911386318 1.2559025600714111004 1.1471525540068157056 -2.010213045985295377 -1.7371693183860215104 1.8440230436153659532 -2.5522965182079233593 2.0510435319590567538 -4.4881388834941837729 0.16578492002645228709 -0.088295774758674977489 -1.0632675974644361094 0.15346522502704482149 -2.0664696501218458025 0.0036994481076015380688 -1.6716548886180309097];
  
  % Layer 2
  b2 = -6.6016153564364170592;
  LW2_1 = [9.0910475198110987094 -9.2576095986252404657];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

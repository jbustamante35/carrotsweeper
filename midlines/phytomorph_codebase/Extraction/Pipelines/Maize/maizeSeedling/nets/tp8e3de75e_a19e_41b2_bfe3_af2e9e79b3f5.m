function [Y,Xf,Af] = tp8e3de75e_a19e_41b2_bfe3_af2e9e79b3f5(X,~,~)
%TP8E3DE75E_A19E_41B2_BFE3_AF2E9E79B3F5 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 04-Sep-2017 01:54:04.
% 
% [Y] = tp8e3de75e_a19e_41b2_bfe3_af2e9e79b3f5(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-839.604414481266;-7316.6928526506;-873.097427232645;-1646.05375716083;-736.048566587917;-346.884767278009;-410.542636124639;-168.317352166511;-342.308065266747;-280.547165434094;-123.367532175745;-243.822193480736;-167.382252836743;-134.941855531054;-166.270203945321;-165.943873492964;-114.307991853891;-147.229750402572;-106.365322334037;-451.498000639699];
  x1_step1_gain = [0.000435258359298381;0.000254266760874674;0.00034735300303884;0.000777513986910232;0.00172505617054034;0.00206247464333953;0.00302249934878054;0.00323098252238337;0.00220614635584283;0.00242812082773057;0.00231897377235318;0.00407495867726355;0.00341201206501312;0.00551378415971694;0.00648970220781419;0.00620026189110825;0.00633602455502129;0.00774864116842941;0.00243421857993165;0.00313801600663506];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-0.35813916314784288719;-2.3488868265325728579;-0.14275825123868082778;-2.6161772891059804635;2.1845534182236252541];
  IW1_1 = [-0.036461523921002395032 -0.049753754782691443637 -0.12824189747881956092 -0.32990436621827351482 0.69784192839576775214 -0.15942945289975474221 0.72039762660166939412 -0.93803829253043236047 -0.15134785293055857958 -0.27496251450496339563 -0.41994980947314641817 -0.33675058581795402901 -0.086633925632552039042 -0.68810268308564459527 0.65331178421455371463 0.58843806948801524737 -0.72561894864636611313 0.17130558942449614079 -1.2456306949070734547 0.005768521460566743142;0.18603613338376717712 -2.4046333040562748451 1.8445745910262030254 -0.29460711362663949409 -0.42995600875063194612 0.49223871247545847307 -1.1730457542351826472 1.6963100230916920985 1.3681684860619203192 0.66830831097028586818 2.3781446229133607062 -0.47373885321860143005 1.2403107082158795205 0.7463219558717915092 0.02416934559779726141 0.17963643504378182247 1.2906311547899631531 -0.48835983351216949444 2.6279146689693706485 -1.7876878649473453287;4.0774341273794929563 2.116722939270227144 -0.82538654816200862641 2.4463340838730247562 0.084061596398539398245 -0.55066518086760429807 -0.017119628712033454349 -0.28735284443990855019 0.22033574461716098902 -0.26023337744622843104 0.3254309161049731558 -0.083562296269712621477 0.066258703266510343699 -0.14881476403832566424 -0.018711655381648460011 0.24512680247282270241 0.24853694871977966008 -0.075832155761262898253 -0.39384563235243552626 0.040371126462496520482;0.89789832986570949913 -3.5459857855958181183 1.8203974353673886277 -0.94383717569463343455 -1.0559264981597433763 0.42826014590470468102 -0.59175042351793782913 2.1558788425613224504 0.86730215279161293473 1.5074761731642338791 2.4464402045240314365 0.51754700120625252158 1.2052039615470842016 0.64828642036053452102 -0.58731961816714362001 -0.4592778393181630725 1.1920464850031358139 -0.051125317440683382131 2.6232045268574006869 -0.95992616563552668474;-0.86351499074365789532 3.5006728993169788922 -2.4958438952507702169 1.8100491449325761817 1.6147524795744314652 -0.85791440975483590492 0.29522218237120945172 -1.6011967736509522542 -0.69133462613514329309 -1.4652270936434126369 -3.1473705161155387522 -0.085007706640042285384 -1.8800533025218668648 -1.4112269087033779691 -0.039345471789854251365 -0.43384959464788741546 -1.1648469519656039495 0.11678441922746564396 -3.1280128928069972361 1.5286665861833879099];
  
  % Layer 2
  b2 = 3.5268645911212033184;
  LW2_1 = [-1.8210767710619075732 0.74867316752213930453 7.4684276215221609974 0.38281385316393384821 0.06735228230915060732];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

function [Y,Xf,Af] = tp9af8aaf0_abca_4e10_863d_59e9480da799(X,~,~)
%TP9AF8AAF0_ABCA_4E10_863D_59E9480DA799 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-Sep-2017 02:35:12.
% 
% [Y] = tp9af8aaf0_abca_4e10_863d_59e9480da799(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-5973.6023996224;-1846.28602050405;-1416.92748927618;-923.044887924526;-718.635970677915;-534.736579087549;-636.877630731673;-474.328050496922;-408.756773605255;-437.689914113491;-597.158358369114;-252.737018064955;-357.743301501303;-455.326587536792;-262.500890231167;-420.955237007941;-168.878309979178;-265.923075543756;-374.93843893184;-382.085749121027];
  x1_step1_gain = [0.000250772026915416;0.000457175383291266;0.000795694570296745;0.000975455655635302;0.00136867839470428;0.00177765334299387;0.00147664952758211;0.00196526984478522;0.00211681540578914;0.00191395299404992;0.00213803411115014;0.0031374581659882;0.00239499394158852;0.00262802245354357;0.00340299377226972;0.00307580218448469;0.00420342200465322;0.00353937526659766;0.00305696135696243;0.00320422591704713];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [2.4235707374976054318;-2.7035943736343415189;1.9100992682902540043;-2.7856331931976914262;-1.8472656195657370937];
  IW1_1 = [-2.6455088381233302641 1.1677010628406701009 2.5806635484150586279 1.6590441249406606694 -2.0693158387132233322 1.3238029909019126684 -0.5186454710299520654 0.40898906209406915568 -1.7995324848368039472 0.90282340863258458974 -3.4484662666579444235 1.8067379423098186564 -8.3743268351677624395 1.1757871369178676257 -1.2120815871736634328 1.1716417633892701744 -1.4778795975252101425 0.59888327505625726932 -0.67578018179980892111 1.6733908211335484228;-0.22797939664518931946 -3.1625735428496053459 -1.8704757463049821453 2.0960885924981789152 2.5648119790980810073 -1.9437105317394114401 -2.7910433373774203858 -0.45240892863976456262 0.063259536869209612164 -3.8549466161986365442 3.0968002390029747417 -3.9007467852577355494 1.5005374942502760494 -0.52187620950091451189 -0.46833515811723824829 0.28854922486248812952 -0.85917694350424300698 1.4920833808823510402 1.6603090436675604913 -0.79750011532063713737;-1.0114174554440893417 6.777968028557229907 0.96305521481204237055 -1.9679388015029422032 0.031757733667243777387 -2.1550478218455957347 1.5028087619123189356 1.3856924497392508755 1.0793685264623016362 2.7287857470222647294 -2.0067194742321392553 1.3563432927627174784 4.6344805569697005154 -2.4939653308880354032 0.20689465621207275836 0.42471130778008481244 0.31073647285853317479 -0.44751683642157774612 1.3355832545822636792 2.0448555301362216774;-0.63121358152044193535 -2.1458341044059308089 -0.47287939228035902328 0.055148232033527012919 0.60801195063552526676 0.058200087084198444398 -0.50891472935512294118 0.8139576608438159333 -1.9183488868541294092 -1.7221019134747583834 4.8638891414725478057 -0.022693853797546244266 3.2892224283340749658 0.26634895520005408276 1.876108912187403277 0.51652300836821252172 2.556675047301191217 0.24669530021580166057 0.10749146749626159458 1.1512804119165347405;-0.38427868729016623206 -0.071156982213832889461 2.5536918500016074773 0.55941176454266261509 -1.866819728138632728 1.1682130619917407977 0.88090003212506606811 1.6550701689625508806 -1.5901308444547712639 1.4573579951312944925 3.9114578795126204724 0.32835417591318000197 3.3424094940867830061 1.0211562332988810553 1.4757320029342007039 1.3095251148791313689 1.2187573294735520868 -0.71777281579231855257 -0.68142320044627857634 -0.26077686001357908152];
  
  % Layer 2
  b2 = -3.7078645498020477156;
  LW2_1 = [5.9743547583860330263 4.7922284586953178831 -4.7396923947721374404 7.6349255213735585102 -7.0657980980433192641];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

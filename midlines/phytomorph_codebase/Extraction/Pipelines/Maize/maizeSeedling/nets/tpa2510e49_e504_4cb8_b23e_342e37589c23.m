function [Y,Xf,Af] = tpa2510e49_e504_4cb8_b23e_342e37589c23(X,~,~)
%TPA2510E49_E504_4CB8_B23E_342E37589C23 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 04-Sep-2017 01:37:16.
% 
% [Y] = tpa2510e49_e504_4cb8_b23e_342e37589c23(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1660.06224852336;-1969.79757456081;-1377.69545894784;-758.1190433714;-1005.44642162532;-672.522601966803;-447.378118638322;-450.686587111715;-682.765477573459;-606.219316949401;-622.812481590516;-410.039334332747;-387.578117402322;-429.961560001095;-373.70589566599;-359.072122656296;-277.03733689748;-301.07831547395;-400.794724948388;-285.384637074678];
  x1_step1_gain = [0.000244911356138662;0.000507837665104201;0.000859080031338269;0.00102992699402406;0.00116476174985821;0.00153608271588201;0.00186490882819871;0.00229564725234537;0.00140550898923532;0.00187872252206337;0.00209870879134679;0.00237421637966935;0.0024968391825788;0.00271795669482127;0.00287765136194786;0.00323536160952189;0.00314965135524182;0.00399550556362196;0.00295376821702649;0.00375051214875976];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [0.2783951522849031357;-0.2183043595037781337;4.2882669975770504323;0.49455652138160349773;-1.5680436569905085165];
  IW1_1 = [-3.2659137881936923797 0.28982177212042564696 -0.83533452317370493478 1.4023781409404345588 -0.88384683140454256556 0.97655313389837539173 -2.5889745057186903665 2.6223817954474060166 -2.9395966212930919603 0.17066814352474923844 1.2903977784108942028 0.14530409254542250852 2.0736224452622447068 -3.7473041439537744246 -0.94325269675735912145 0.3256078380371525971 2.8225807491949410633 -2.4176147789616488915 0.96627343696435752385 -2.2543691557495657563;-0.92724472458173889944 -4.57995914471899912 -2.0793850728977885112 -3.8840660627345222622 -0.53263891209336045041 4.2025824228753521083 -1.2729584121512447226 0.98578009838859781411 9.5957082606131169911 1.6656021764150077402 -3.2262162753581637986 -0.81127766430812220388 4.9086732533721315619 -4.1102161891377066993 -3.9760442703107350404 0.69955512408316355977 -0.73676017701193086129 -0.2248822151758547716 -0.53535607952256025754 -0.78619932690533833597;-2.2740891238651506079 9.0458888854176677796 -4.9484651100151548775 4.7229162762442449264 0.34037976203313197177 -2.5163178904004155356 -2.3589355924461425928 -1.2712565578117569487 7.8917252937015458514 -1.5515661840009307149 -2.9373816788738511541 -1.8051835467539256719 -2.6544007585532720661 2.0224374558470197272 -4.796528943742615958 -6.8617864030033945966 4.3243880004705950171 -4.7166458231710626237 4.0418640589463148416 -2.3451546785874404222;0.45809741083143190599 5.2591030487630261447 -0.43908252260481228646 0.11418810323145243968 -2.7404622726086294016 -1.0474446948886557696 -2.0724071935703758385 -2.9086115564812624612 0.95570741572293949062 0.75481128059135271791 -0.21393835252958315341 -0.65652703072017781771 -2.0340049698506454945 4.7396134255373434385 -0.27995477038214849896 0.35570062922219669588 1.005892870348944923 1.9547241889971362916 0.41758627596569558582 0.044771638725994024333;-2.0052860288882783379 0.55245787818375180489 -3.0709649934319953601 -2.651249405554712002 -0.3921760769169017613 -3.1621323203278284275 -0.57913423021234933241 2.0564302419758679896 -4.5995703970166204044 0.22036466558683040495 -1.9080589587852017086 0.75346597023673467231 -0.031214352386907950887 5.0097025722850405671 2.4587379753973643837 1.3609709721668825644 0.059598817926532224321 -0.94922220253653777355 -0.9707406828056009962 -3.5313162414643302078];
  
  % Layer 2
  b2 = -3.9858956917951267052;
  LW2_1 = [-5.2786363801168043608 -15.203735547464194866 12.784416649260222698 7.0975878547106354688 9.6243826720824312559];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

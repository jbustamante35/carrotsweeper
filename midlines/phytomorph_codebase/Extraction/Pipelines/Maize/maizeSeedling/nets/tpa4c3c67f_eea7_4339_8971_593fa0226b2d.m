function [Y,Xf,Af] = tpa4c3c67f_eea7_4339_8971_593fa0226b2d(X,~,~)
%TPA4C3C67F_EEA7_4339_8971_593FA0226B2D neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 06-Sep-2017 08:59:42.
% 
% [Y] = tpa4c3c67f_eea7_4339_8971_593fa0226b2d(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-5466.61789079662;-862.937878923583;-1028.71862143182;-451.710971542903;-692.538815520001;-441.043793232211;-783.667639824726;-311.950474474656;-656.555828069296;-380.160028036847;-183.589471391041;-268.743398235211;-384.146123020668;-242.574763141885;-233.266353450972;-248.55598516249;-227.243600250003;-191.974128700858;-162.786711803924;-176.062817024419];
  x1_step1_gain = [0.000192953812201724;0.000635170113819407;0.0010737117105794;0.000992967389065703;0.00140247416929522;0.00179426803546528;0.00152094087103249;0.0026247520165371;0.0019941549476651;0.00251075910029925;0.00454433874041185;0.00378662000738738;0.00302237737948982;0.0044887960413855;0.00366080733460353;0.00363057230533701;0.00381924645546804;0.00427537582274466;0.00592120551781321;0.00602422138644198];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-0.030328360528770886839;-1.0022236839276135179;0.7357535381429171073;0.047462494387970795284;1.7703209505957966385];
  IW1_1 = [-3.883490360124061791 -1.3622211447523580041 0.10447168534498428583 0.93712029107127270411 0.18787951895918467149 0.22593879053141208146 -1.6441549273634126216 -1.0768073255131085375 -0.37921710568486199922 0.62803485413287984951 0.010084289594905041648 -0.47919757579884186827 -0.23272106290147645535 -0.79617989572234526552 -0.15442049220353565309 0.027276468949250863572 0.42750663441405090115 -0.73055784397948830833 -0.36776327188446716887 -1.0126992277281758881;-0.69098887309779932764 -2.7493645525104795091 -1.8122672422742436282 -1.212517294647762256 3.188192271723058191 -0.032277139324056340619 -1.2965800387799537585 -0.3551493646795595982 -3.0742466484280304151 0.69083938674067435493 2.0415080026281144931 1.5555220973879464452 -2.7045383644231737463 -1.1560326661087905187 0.43847439453859504699 -0.37418717690793290576 -0.21223038479014164071 1.0199806886031701492 -0.071827441848460391038 -0.34265892431983591138;0.15652509537116141014 -1.1677363678817562764 0.10325424355655900277 -1.5655819998772484425 -1.1860272558555486899 0.53480496996793691622 -0.092931537138764674921 -0.54489550982255230416 0.94063592189453038017 -1.014278836356875324 0.72027286562201053854 -0.059581545963255301557 0.73202582832463891638 -0.14071929335628571844 0.33881050852738414658 0.2037085610335394037 -0.33275971172491819461 -1.0447385433436831015 -0.18689930447050506768 -0.69434399449147132799;2.6128173123977616044 -0.22693758454265750002 -0.97491011552467821133 -1.6027196421471419097 1.6104947420033848271 0.42632705275359955577 -3.0051652930605619041 -0.63191905273733628423 -2.3098406375070972274 0.80019805007733313396 1.7283276236955491534 1.2148968949621257174 -2.3345186836723272883 -0.46772110409548278698 -0.045714317040104902878 -0.74100697040639584845 -1.0260996958602923712 1.0456009586293097957 -0.078619085577719780011 -0.23237842222038762596;-0.42133742983979449725 4.5834888093522376806 1.5142995828658214474 2.1892353193529938693 -0.45339920463825444941 0.33549936086028298021 2.1050841271681210998 1.3288497345660141846 2.1127523098910581112 -1.2552759268072881671 -0.87213255112372678468 0.087951447966572504633 0.047067589956950997565 -0.2714881269785506257 0.53491274427013268955 0.047142321942895276665 -0.041810990668118788727 -1.2180440063771802439 1.0661600155335102524 -0.46829342234300075365];
  
  % Layer 2
  b2 = -4.6911371311431118158;
  LW2_1 = [-4.0678988030644216423 -5.102767575447201942 -4.6560830809892772564 -4.5697396712712707867 -6.3256192452045034713];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

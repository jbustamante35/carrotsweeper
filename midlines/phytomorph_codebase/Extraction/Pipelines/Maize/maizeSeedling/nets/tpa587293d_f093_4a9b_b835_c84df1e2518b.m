function [Y,Xf,Af] = tpa587293d_f093_4a9b_b835_c84df1e2518b(X,~,~)
%TPA587293D_F093_4A9B_B835_C84DF1E2518B neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 30-Aug-2017 10:49:13.
% 
% [Y] = tpa587293d_f093_4a9b_b835_c84df1e2518b(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-5466.61789079662;-862.937878923584;-1028.71862143182;-451.710971542894;-692.538815519997;-441.04379323221;-783.66763982473;-311.950474474655;-656.555828069289;-416.41181342802;-256.518565057535;-268.743398235243;-384.146123020659;-202.97900708081;-233.266353450977;-302.321350914758;-296.419908591257;-275.821003918839;-162.786711803938;-176.062817024395];
  x1_step1_gain = [0.000192953812201725;0.000635170113819407;0.0010737117105794;0.000992967389065707;0.00140247416929523;0.00179426803546528;0.00152094087103248;0.00262475201653713;0.0019941549476651;0.00251075910029924;0.00454433874041222;0.00378662000738721;0.00302237737948969;0.00448879604138529;0.00366080733460359;0.00363057230533715;0.00381924645546726;0.00427537582274486;0.00592120551781295;0.00602422138644229];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [0.31175532881321948997;-1.3002346601811969329;-0.61578629883695557012;-2.0113602775509007436;1.1274123119190697651;2.2412219274088336363;2.9271892620987145506;-3.5788366367294179859;1.1383391554697905867;2.9499475494487352734];
  IW1_1 = [4.059413076583628488 -0.67661295953646871659 -2.6427817186983086906 -0.92978210808483086058 3.4636377813815579785 1.127621313971735928 -1.2362607874555706644 -1.6880689759835518782 -3.4084838150945828694 -2.0376608746729307775 -2.4396074034243562245 1.2462104321965974396 -1.8684645846106413547 0.57184630165547600811 0.26593855005346134224 0.61621750435800204393 0.044539547310959867743 -0.79550935092677765859 -0.58108267661002566129 -0.78265477957579832058;0.42566101540604922571 0.88051408563888833303 0.51401185407779548253 0.094192821793753475634 0.33165169208202993634 -0.30361076847889639785 -0.3823435804754699574 0.16040709196463273645 -0.3446247675681159417 -0.71484357423193800596 -0.44867989026550630927 -0.45568587845067048958 0.27742691654457779515 0.36311925486076362946 -0.03144039420838360549 -0.61126575502939450857 -0.12096623305920295444 -0.11090751641091572965 0.09684231281203255215 -0.00075539543200294552872;0.97619044774216712224 -0.22997552753151548344 -0.60045899880906816737 -0.15965392384262008796 0.35156363678568353093 -0.13570080424371375183 -0.56597032999755580995 0.019439437906623006219 0.48943930493652698654 -0.43954447993592776767 -0.015871511018907043938 -0.021879221256521287631 -0.53541249402955859438 -0.39596524573912006417 0.43154172455878364589 -0.088528980633229351072 -0.10742906051992431871 -0.3657443414626936895 -0.44516853953034163371 -0.5311113605434408802;-1.3809973454661743641 -0.71789941465128181974 0.95994973838923169929 -0.57041803568715698791 -1.499651824362750796 -0.78737118179673515339 -0.21911002312894692357 -0.35499535860716135982 2.4076587612993551879 1.4785610571725242846 2.2252236514525152167 -1.9903806912812265217 3.9153501319892618504 0.32305757390588452083 -0.49169996625744954999 -0.20770425899761210675 -0.83498094564545477514 -0.33916801277491709365 -0.63317350753681833631 0.8904789115825244572;-2.0077405672365493672 3.1901079084225716365 1.8567800467669812736 2.3005776514519462594 -2.1900871383816111759 -0.37546701473871912924 0.81711569130204375622 1.0213103046646054839 1.7418879908566136105 1.0997522399326027376 0.69463495610492342891 -0.079074703537294219191 -1.0975116894371379495 0.097109698950155476371 0.82120847110074091102 -0.11502541472270949585 1.6533896840971060715 0.58076203630996026117 -0.19621327171937136269 0.60750561746042586186;-1.0907824265676826503 2.7758149358010562047 0.47883975797646444184 1.0772054587950012916 -0.19599165468368912046 -0.072786933324322247718 0.54948162062885574919 0.53274656919537022315 -0.15557797864864833515 -0.056033917339696835691 -0.19833818153902690873 -0.37710080797848699596 -0.24855253455926812345 -0.47414553681300419807 0.38915870319631218344 0.27503931116859114958 0.32592645154579025224 0.5843182293205582134 0.19715605488415846591 -0.072580680528206889535;-0.2186972748951410972 2.1474618883887797161 -0.33106612215085085005 0.63440266595147398743 0.29168609586563531977 0.37969136519158780407 1.4546387187537783703 1.311673194524752617 -0.88133308640785135157 -0.414762185682811646 -0.84263368721058562461 1.04111302937767225 -1.2066450324016106954 0.99462930582070929741 1.054933015049778211 -0.37741082463356501187 -0.31050237077792941509 0.85095122333225026168 0.37752892067088672512 -0.92322876922474184092;0.62401310533390874635 -0.39194550976177938706 -0.092014738600152037873 1.2220722022415730912 -0.77810788821118848091 0.3780301163301477696 -0.71575571938775184311 -0.6675628785134205545 -0.26949022643938957966 0.054580788189359075169 0.25017905698941711456 -0.67951157579504462003 0.2443967511412181437 -0.14528419610153761599 0.32685567716349084311 -0.17097982677609363522 -0.81529057435097984641 -0.25471482809521622803 0.29423427211675551307 -0.4293486941148252356;0.72821399757707772071 -1.446672575941588379 0.71969829790523331958 0.22110038299985412813 -0.47931949576101834376 0.1338383650891548371 -0.3525043994867670949 -0.86057951877994520729 -0.35476464580607053323 -0.29711657663062640555 0.3254201057116632434 -0.84847288136537335479 0.61341141762923212521 -0.10061185680074255511 -0.22065614754602833059 -0.46030068214612651634 0.4092059184807968486 -0.63483817466406222696 0.37192617829271651386 0.51251346080427184759;-0.28894677623620657059 1.635451695287047702 0.34417373590147520845 1.7982601848453099169 0.19338305096976790565 0.46272863191210544809 0.62740710326060955548 0.85818178149616053396 -0.63601579839634536651 -0.54194438054230598123 -0.91795012643111850714 0.56620487055808166321 -1.2284801133561853437 0.30478090210198521826 1.0973230069311883383 0.32117599687600445479 -0.34929168125338555528 0.53292329288937512199 0.031319033791649290854 -0.38545429382743573443];
  
  % Layer 2
  b2 = -2.5147014177177204886;
  LW2_1 = [-8.2657582060154091153 1.4439610664464987977 -0.23995081884230173852 5.7320668698515131467 -6.52072151815799117 -2.9724683094026507213 -4.5711224748000587326 2.7233059056426762723 -0.48812848006679770974 -4.130489044693449685];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

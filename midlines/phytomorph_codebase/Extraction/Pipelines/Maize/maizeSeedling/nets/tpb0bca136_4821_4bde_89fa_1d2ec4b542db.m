function [Y,Xf,Af] = tpb0bca136_4821_4bde_89fa_1d2ec4b542db(X,~,~)
%TPB0BCA136_4821_4BDE_89FA_1D2EC4B542DB neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 05-Sep-2017 03:56:13.
% 
% [Y] = tpb0bca136_4821_4bde_89fa_1d2ec4b542db(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-839.604414481265;-7316.6928526506;-873.097427232648;-1646.05375716081;-423.33397072015;-622.82412415429;-410.542636124639;-168.317352166525;-564.250103325843;-280.547165434116;-123.367532175749;-246.980329538428;-418.782145732638;-227.785437026361;-141.910346711051;-165.943873492954;-201.347350487904;-147.229750402524;-715.253580950454;-185.847378023302];
  x1_step1_gain = [0.00043525835929838;0.000254266760874674;0.00034735300303884;0.000777513986910238;0.00172505617054034;0.00206247464333953;0.00302249934878054;0.00323098252238323;0.00220614635584282;0.00242812082773072;0.00231897377235303;0.00407495867726331;0.00341201206501324;0.00551378415971598;0.00648970220781283;0.00620026189110823;0.0063360245550176;0.00774864116843147;0.00243421857993413;0.00313801600663097];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-0.50416129446347601739;-0.42797396028838752269;-0.52978722409902767598;-1.5670888904357609395;1.4001894496190174788];
  IW1_1 = [1.6459712187274790907 -1.5806393527172537539 1.5036365871457191279 -1.1705741836654894872 0.37949462112557930116 0.54209475833683307133 0.44141666888675346048 -0.21990186017765597781 0.64732072739499046943 -0.36319115163540843794 -0.34385373230999582983 -0.26398722048194961376 0.45019015806622642017 -0.26529813358798232104 0.35614100340257937027 0.50822525761385139997 0.52709788838253768262 -0.32930151841869342855 0.70767931666755579112 -0.83497390805702287331;-1.8138213084259260377 0.19963862130090892499 -0.37590911641233742957 -0.054392669130673976241 -0.70088777646775446417 -0.10080320871140384387 0.34156676144464587219 -0.38663638489595375525 0.43477056719142137542 0.097631949929062544768 0.30990564545654225581 0.070621225411677451822 0.61234577694121106184 -0.43991228384269032148 -0.19045285367543715593 -0.40151095897068955765 0.15165804402554114438 -0.06695808057521225598 -0.22943274678868855188 -0.31283329634317968981;1.1581969925325097392 1.7420224396586880822 -0.42643660539516814456 1.2085835428677462744 -0.068239161884937504787 0.25116506294396490073 0.15350529923401892707 -0.29338154965531892948 -0.23358869351976524475 0.068263356701263849802 0.71684300099344955282 0.039768830614835992687 0.052785665571254920814 -0.2518046594945962946 -0.36194705951744110539 0.32384717270868079719 -0.079518902792904147536 0.59065373952534450108 -0.2599246434591496735 0.7924438286129040776;-4.2001966677363116176 -0.8001620091770043075 0.13237630429768804108 -2.0540976008901736805 -0.54116357039851514799 0.2066615611662378782 -0.35105016044864700842 1.1568797390241980505 -0.38912827126577226311 -0.10335626079216572726 0.080750284705537078711 -0.4151782181275088246 -0.40483576819684019554 -0.204299328920677703 -0.13736060104399805404 -0.066508427127706021276 0.19532255391485464635 -0.071122851344326054601 -0.70348484683890111224 -0.10025655013760612078;-0.91638630253188602115 -0.93777812426175000127 0.57136801613877741257 -0.43905995760983862475 0.64720126699108837531 0.13772338549232904237 -0.57249850510842570372 0.053616984152107187434 0.34547520512751545008 0.5328189449743757633 0.047569385070193780096 -0.13931095920816541356 0.3524816836556497468 0.41323573485189246668 -0.45141559878325338007 0.37334442080425567223 0.090573970803451309131 0.38009907912723606138 -0.57930643926490066331 0.32310271997303263714];
  
  % Layer 2
  b2 = -1.6156317698874502753;
  LW2_1 = [-1.5862182245414691018 -0.65472074779895050867 4.0903316207159301499 -6.3250724463432899114 -3.2974286305785383];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

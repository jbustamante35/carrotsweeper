function [Y,Xf,Af] = tpbe1033df_158a_46a9_99f4_8e9d240e1703(X,~,~)
%TPBE1033DF_158A_46A9_99F4_8E9D240E1703 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 02-Sep-2017 16:00:03.
% 
% [Y] = tpbe1033df_158a_46a9_99f4_8e9d240e1703(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-8184.90793418461;-841.368302509965;-925.675633657013;-1424.63292253516;-1115.63541033651;-861.953076142268;-996.664725988393;-421.625702789071;-721.553885286558;-557.274532479568;-502.132109545498;-541.944235264826;-543.177005191313;-167.207345824939;-344.528961662832;-294.4017764027;-391.010406370098;-285.680184537947;-174.294824484567;-301.038307242073];
  x1_step1_gain = [0.000202107905561193;0.000554219398814735;0.000742185534904078;0.0010185341647551;0.00103332655312913;0.00147681597144009;0.00118221307527393;0.00265958726683859;0.0012523589192447;0.00165285753177999;0.00232860128237177;0.00188013184297679;0.00198822427969294;0.00479968082327782;0.00252047169225125;0.0036311720615839;0.00272984263620491;0.00383651951608913;0.00502254586493017;0.00330771328744478];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-2.7821674271721539284;0.96118371721805084817;1.5112527659005705605;-0.26773302382271785271;5.6199614361135052931];
  IW1_1 = [6.1742921086798228103 2.7235782437886641993 -1.1668350929625095347 -2.1449419650218972677 2.9729258692884390491 0.8775961289323507275 -0.77005680694461364766 0.47630112863644541443 -2.7221182552413880629 0.18533243751649636222 -1.1165554982129086703 3.6449330565236355284 1.1675925649178562349 1.4376599218443328887 2.6569196653271882624 4.1992948804549063979 -0.58071370335451355515 0.38629997607405996973 0.77871198400276075979 0.28390051629176971115;2.2844007958627492449 -1.3998200780665188692 0.17040923096851515184 -0.28487746040417694093 3.161680524336195397 0.062608128808051791148 0.32995541316950133259 -2.2555366835686139204 -1.9715761260846007552 -0.18075984593522298471 0.2857205820119949613 -1.0029003057468859339 -0.0079206915942928047408 2.3969019649664171645 -0.74733816701564836915 0.079908692292966543302 0.28626408130878511216 1.1830155200971861351 2.2247359143094844747 2.3580054939387706803;3.0781661469083521077 2.1918132611880261074 -2.7120575015808796593 -2.2334652126192722221 3.7200624241820685612 5.5680036978167093409 1.6928925381330948152 -4.0378278383826300413 -1.2185009336553414006 1.1493024765418342614 -0.54971664681549325948 -0.34708231118906179846 0.054995491841808463729 4.6467249925575080383 -1.8388221633057830751 -0.5984646140162589445 -2.5512824807531275795 1.4036672621214150158 6.144194473406736634 4.832980638818594521;2.7734778175670031786 2.2504677608620879958 1.4420343354616014242 1.3317779713415718312 2.2896829961634046491 0.3828244643844663786 -3.3291455916569492324 1.5142178283884772938 -2.6153857086851211022 0.65586956403693152939 2.522643444593599682 0.15191211660114545268 0.50203474086839394719 2.1278943549568238858 3.4085846468945981691 2.3492965577689051138 -2.7470280383509675382 0.93022270183961885959 -2.5869975970761758255 2.509213196423313974;0.52494616064552246382 4.8325559428001030327 1.9237075386296107471 0.33533543415310024249 -6.3265996952941598863 -1.0809399721352019874 2.0021877752014027863 -0.92256723469670975923 0.61114273518508399619 -1.0221346028019697716 0.2696691817361307475 -1.2402287486326999399 4.3045135580259819008 -0.39342338452529362902 4.660353979093530441 3.3120523541184980765 -6.2245794705114043666 -2.0338532825488448985 0.23184267052966897604 -1.274346905412953701];
  
  % Layer 2
  b2 = -3.101668692255838522;
  LW2_1 = [7.789781913331625951 -13.567105627631704579 8.0850134520850236441 4.3271943031922761591 12.380529159243339521];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

function [Y,Xf,Af] = tpbf6d53cd_879a_4dfc_81df_68b8ce26ba2c(X,~,~)
%TPBF6D53CD_879A_4DFC_81DF_68B8CE26BA2C neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-Sep-2017 04:43:20.
% 
% [Y] = tpbf6d53cd_879a_4dfc_81df_68b8ce26ba2c(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-839.604414481265;-7316.69285265057;-873.097427232641;-1646.05375716083;-423.333970720151;-622.824124154292;-410.542636124642;-450.689400777706;-342.30806526671;-280.547165434102;-123.367532175736;-246.980329538447;-167.382252836745;-134.941855531037;-166.270203945302;-156.62314627572;-114.307991853877;-147.229750402551;-715.25358095106;-451.498000639858];
  x1_step1_gain = [0.000435258359298381;0.000254266760874675;0.000347353003038839;0.000777513986910231;0.00172505617054034;0.00206247464333952;0.00302249934878053;0.00323098252238326;0.00220614635584285;0.00242812082773067;0.0023189737723533;0.00407495867726272;0.00341201206501288;0.005513784159717;0.00648970220781351;0.00620026189110779;0.00633602455501702;0.00774864116843019;0.00243421857993209;0.00313801600663414];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [1.5747176621727070334;0.58485057827639541639;0.33837156552380531771;-1.4602780751892361355;-0.77829957845923114501];
  IW1_1 = [-1.5860806118852674995 -1.1058363891417171132 0.53719082640737103596 -1.1236335688660497034 -0.81153943307503073612 0.58188347160716336059 -0.62451372543990757435 -0.62170342200373174268 0.052225693822903387908 0.44028950248344522755 0.63167819248832512979 -0.64357428172307373782 0.20455991772616682889 0.34801886924199415541 0.55882307582618118147 0.87620032772495248796 -0.26934072717512663742 0.28481981005007939167 0.036155286262091239358 -0.38636755205934403268;2.9195634711207949508 1.4433384590316311602 -0.74201990950819463055 2.6546182116231493708 0.12726875473291462959 0.4238299144881584879 0.16167033950323689284 0.52147383747634912243 -0.44670335064166510897 0.43891623198376733539 0.15185192968589156237 1.1286207298713302194 -0.061506639164322723934 -0.52759147073336842837 -0.061937381409369808571 -1.1821218960425405875 0.74486116469156327113 -0.48466174030273634354 -0.54768473516846705174 -0.083847887389954120496;-1.8521479201834145645 -1.2874000986754654541 0.78432944355280775905 -1.5188822688963325991 -0.056468684030315879907 0.046324424819832669964 0.34732031334334817485 -0.30907455636880043492 0.1653338171347433494 0.53430388826207986241 0.36470969436960437582 -1.326150379607383023 0.29670848554659640106 -0.45199996118139740275 -0.30096016581119983124 0.0075929546466254639603 -0.086448656272873722339 0.5162310969578498554 -0.086463875869443485023 -0.13077589358870814196;-7.115139901291675173 -2.1351237694459355154 -0.73089935340461942292 -2.9628444457952691771 -1.1821410214782559489 0.21412395013831037049 -1.2822708659677062304 -1.8879189922735384322 1.2552052946655272159 0.39355213354570312001 0.85403979030604360023 -2.9462129918559711861 0.57498544703264031774 1.0641853902068256765 -0.18927138811040217226 1.4061750290477179615 -0.89771361233080759767 -0.089944965031779233744 -0.27917393715196936466 -0.44376658589275641553;-5.7408535301930472272 -3.3522234212188606328 0.78915422727878470344 -4.0185487823653831541 -1.4843338681427991066 0.37153375066724469988 -1.0810000413229805538 -1.6727072436535375122 1.3408600654970199706 -0.276276014088961408 -0.28828351254456358044 -3.0030901413565866953 -0.56812063921591038351 -0.52212140805752260686 0.13795459559786577008 1.5562084938612468221 -0.89237964791333457271 0.23470541527740657051 0.93004337547121596064 -0.27351917728201524671];
  
  % Layer 2
  b2 = -1.2621808281244901728;
  LW2_1 = [-3.0681065875449138325 4.8648703041507745937 -3.1507443188236399223 -9.3060871972788099526 -9.458937010810648971];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

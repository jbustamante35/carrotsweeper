function [Y,Xf,Af] = tpf5eee5cd_9752_4e7e_9be0_ed41ea72294c(X,~,~)
%TPF5EEE5CD_9752_4E7E_9BE0_ED41EA72294C neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 31-Aug-2017 10:27:47.
% 
% [Y] = tpf5eee5cd_9752_4e7e_9be0_ed41ea72294c(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-5432.21511079255;-863.132365464488;-1030.35626722576;-451.327248716537;-737.123093475076;-440.923810847593;-781.659803211375;-311.516810675613;-659.850047510511;-416.874768568218;-185.329610546071;-272.098158795894;-389.737207411706;-200.812705665956;-235.257771107128;-287.447714627179;-270.705877196918;-276.01952749145;-161.960068441782;-159.036943443461];
  x1_step1_gain = [0.000193639844679507;0.000635136090067476;0.00107257204462677;0.000992521373387902;0.00140098678161598;0.00179249040902967;0.00152180852073822;0.00263160812648067;0.00198686103343277;0.00250748142155723;0.00458743324706882;0.00371176793861552;0.00296778207281904;0.00448915093377726;0.00365879017755139;0.00377014651183424;0.00363538636865034;0.00429258503045435;0.00587388837253199;0.00612684175841763];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-0.21783836454873339861;-4.8346378340693654252];
  IW1_1 = [-1.3733746137939855103 1.1289395593418649621 1.0277422972643177612 0.49296242337861251315 0.63702504384503111368 0.40973680895874969865 0.62888860393821977013 0.4969582868840574652 0.10378421905730436658 0.73697866164182168625 0.17698373242551623807 0.68586211236838445782 -0.066874845672022370513 0.077089308272378073705 0.63127622929439952681 0.20472491912426710181 -0.22383642417324250973 0.41678164393843436519 -0.52298954446427203813 -0.54522004108723154392;0.099631898124038636988 -4.157036803617242704 1.1131876041124060261 -0.49346921739972571253 1.9870117329350573954 -1.0910838265571023431 -3.6848050016770583781 -3.1678650764843521159 1.0604353974862583687 0.76283744905309480711 -2.504090367515725557 -2.4833794398924893265 4.8511276794838860127 -0.71611404468404371571 -2.3267056475885490308 1.5867479734714009521 0.60511879217744135584 -3.5698366962816234782 -0.2910621770067969849 -0.53587985765382373238];
  
  % Layer 2
  b2 = -1.4239988313203275627;
  LW2_1 = [-2.1943662115406969981 11.234904356607827935];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

function [Y,Xf,Af] = maizeSeedling_func1(X,~,~)
%MAIZESEEDLING_FUNC1 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 18-Jul-2017 20:43:13.
% 
% [Y] = maizeSeedling_func1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1382.79238954863;-1678.42375899006;-932.332417953447;-801.936650688865;-795.599827809492];
  x1_step1_gain = [0.000666132789553498;0.000445691581007277;0.00069829887131622;0.00118054946589565;0.00150085016463375];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [2.3251227361683293182;-2.0565352341712386242;-1.9211100734632580167;-1.240605156271817;-0.14863752388871684373;0.34112651987326192415;-1.9416421807359889318;-0.3594049028843574467;-0.38728031247899158407;-0.61931138014735043207;0.44847068842513326814;-0.89896481489890267547;0.42179859111312217879;2.0763262034870613171;2.6792538458357042508];
  IW1_1 = [-1.3205028055401217824 -0.83866176666471270451 -0.6801148486537358373 0.1277556203333660434 -1.7424476642578730079;1.469212993503447251 -0.54693647753205398843 0.89711169225073350564 -0.41147863241865056949 -1.6032681989497596931;0.87909534267660860429 -0.23051705758248561273 -1.48334710928661484 2.4760210615835385184 -0.79668875278421624753;0.20009867463332337012 2.3757998464677112516 -0.70473328878787844243 -0.059242546268997629821 0.098762513157286124788;-3.7005939054274779032 -1.2641267244553668903 -0.037852873676260376246 -1.3941829434603132398 0.18348361755442660348;-1.7975986702946320506 -0.52398062224314467805 0.081411033622815417998 1.4640146599164149954 1.1763397073111454549;-0.82163097458100942116 -1.4593047185911418584 -0.49340924842785244264 -2.2331366679271482667 3.0204554298207924035;-0.081365139773529965295 2.3683478073256178931 1.1099427229678937579 -0.17271617967855579234 0.18223950967015042912;1.0191702362501089407 0.9689136417872341589 2.0536350865736272553 0.10736327380007305854 -0.91119074056598103883;0.278913771201702132 -0.0694849539447544573 1.2146742124744531743 -3.3852324017284916025 0.1715455365999875581;1.7252861764670743838 2.7360231705310673611 -0.22791210170772691068 -0.10077872647045368892 1.8364447548478239902;-0.86195592148628896734 1.5712688027685042247 1.8725424225209412743 -0.43522432089610540995 -0.28823963897897525444;1.4150937117953215072 0.89720425101448897376 -1.065924949291068069 0.67275567963291371676 2.249349876327226827;1.8639628474699612148 1.0464014846879918785 -0.22509020762313522446 -1.0190936850566900684 0.0043676335929881916417;1.2063787909238228302 -1.0328403877306657765 0.61341933434506301648 0.38009563966284243275 1.3638980226011545582];
  
  % Layer 2
  b2 = 0.70597338896588535118;
  LW2_1 = [-0.30091321657541808543 -0.98406869857798762169 2.4709620552578903663 -1.6250799092711800675 2.3266417311639564502 -0.76158535896815982014 3.4891844674587204622 -1.7956116307426781553 -1.2269939119048511866 2.3627928628922370002 -2.4939030787030587177 -1.4162736843922005825 -1.4561337692825642165 0.021007453255092841532 1.0592588253188084391];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

function [Y,Xf,Af] = maizeSeedling_func2(X,~,~)
%MAIZESEEDLING_FUNC2 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-Aug-2017 11:23:37.
% 
% [Y] = maizeSeedling_func2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-6003.29087254096;-1354.45339937816;-2095.96976933715;-1049.37179819025;-1255.80034042248];
  x1_step1_gain = [0.000141902219568567;0.000361782882473927;0.000477849957904452;0.00068490070681565;0.00064963341810271];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-1.1670261045263823352;-1.1621301927210998528;-7.4369154798010619345;2.2638534312598141973;2.229673491697858001;-2.2012648842311315356;6.4048572452149521439;-0.39853927210234063594;3.5196392251311454658;2.9682980860129104528];
  IW1_1 = [0.097806433319378757729 0.9555409366265157356 -2.4027369053833731449 -1.6846979397946724166 -0.97385106881516758648;0.042430435148990225391 1.4372084200689685396 -1.7880510941681697634 -0.11902515199589093486 -0.94454703284270358221;0.58303997295629117481 -8.1471275258271322883 4.1037565110602507445 -7.4534998633772175936 -0.96518824701772021335;-3.2611842298432942577 1.2139017559910394439 4.0891886340222951546 -2.0415097422394055116 0.25926440445648979427;8.8980013959000476831 -1.7770005152700951712 -0.99916755550222369209 4.689564344982898092 -6.7126133309580113817;0.4765156267075578711 -1.6034521117896725073 -3.7757242374385002748 -3.8700735054181807371 1.4174942972456883172;-1.0479358277041952441 5.5493838325687541158 1.5537990336698985772 20.570586325138560113 -10.303559082892302712;4.3718923564644951441 -1.2908199866885488039 3.7123747494420222814 7.0549666412952944938 -7.0595858357800214122;4.2275838128717770914 -2.2088592105031952251 0.91448976560022265936 3.8287659297365235211 1.4398131191198662027;0.53580138269872024104 0.95902178832988504986 0.55912599888786929103 -0.44960508892756906318 -0.27166845889481544551];
  
  % Layer 2
  b2 = -3.3950166105765764435;
  LW2_1 = [2.8977910499863921423 1.2994679864898208699 7.9514657441712746078 4.7742371609084326423 9.2745639881064256826 2.8644690024003978124 12.214980441908618758 -10.85361723818270363 5.0468356582121556286 -3.8599592012456733769];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
